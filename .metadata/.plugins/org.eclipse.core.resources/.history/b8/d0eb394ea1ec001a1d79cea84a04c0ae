package com.projects.project_management.models;

import javax.persistence.UniqueConstraint;

import java.io.Serializable;
import java.sql.Date;
import java.sql.Timestamp;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Getter;
import lombok.Setter;

@Entity()
@Table(name = "project_changes")
@Getter
@Setter
public class ProjectChanges  implements Serializable{
	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	Integer id;

	int userId;
	
	@Column(name="created_time")
//	@Temporal(TemporalType.TIMESTAMP)
	private Timestamp timeDateCreated;

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projects_project_id", referencedColumnName = "project_id")
	private Projects projects;

	@Column(name="title")
	String title;
	@Column(name="description")

	String description;

}
